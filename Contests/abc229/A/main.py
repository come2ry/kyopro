#!/usr/bin/env python3
# https://atcoder.jp/contests/abc229/tasks/abc229_A?lang=ja

import bisect
import heapq
import math
import sys
from collections import defaultdict, deque
from itertools import (accumulate, groupby, permutations, combinations,
                       combinations_with_replacement, product)
from typing import *
input = sys.stdin.buffer.readline

YES = "Yes"  # type: str
NO = "No"  # type: str


T = TypeVar('T')
D = TypeVar('D')


def chmax(a: T, b: T) -> Tuple[T, bool]:
    if (a < b):
        a = b  # aをbで更新
        return (a, True)
    return (a, False)


def chmin(a: T, b: T) -> Tuple[T, bool]:
    if (a > b):
        a = b  # aをbで更新
        return (a, True)
    return (a, False)


def solve(S: "List[str]"):
    ans = [
        ["..", "##"],
        [".#", ".#"],
        [".#", "##"],
        ["#.", "#."],
        ["#.", "##"],
        ["##", ".."],
        ["##", ".#"],
        ["##", "#."],
        ["##", "##"],
    ]
    if S in ans:
        print(YES)
    else:
        print(NO)

    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = [next(tokens) for _ in range(2)]  # type: "List[str]"
    solve(S)


if __name__ == '__main__':
    main()
