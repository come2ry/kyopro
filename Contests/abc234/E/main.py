#!/usr/bin/env python3
import sys
import bisect


def get_koho(d0, n):
    # n桁の等差数列
    kn = d0//(n-1)
    kp = (9-d0)//(n-1)
    koho = []
    for i in range(kn, 0, -1):
        tmp = []
        for j in range(n):
            tmp.append(str(d0-(i*j)))
        koho.append(int("".join(tmp)))
    koho.append(int(str(d0)*n))
    for i in range(1, kp+1):
        tmp = []
        for j in range(n):
            tmp.append(str(d0+(i*j)))
        koho.append(int("".join(tmp)))

    return koho


def solve(X: int):
    # 1, 2桁(1-99の99個)は全て等差数 => X >= 100を考える
    if X < 100:
        print(X)
        return


    d0 = int(str(X)[0])
    l = len(str(X))
    if l > 10:
        if int(str(d0)*l) < X:
            if d0 == 9:
                print("1"*(l+1))
                return
            else:
                print(str(d0+1)*l)
                return
        else:
            print(str(d0)*l)
            return
    else:
        # X >= 100のとき、 {111, 123, 135, 147, 159}, {210, 222, 234, 246, 258}, {321, 333, 345, 357, 369}, {420, 432, 444, 456, 468}, ...
        while 1:
            koho = get_koho(d0, l)
            i = bisect.bisect_left(koho, X)
            if i == len(koho):
                if d0 == 9:
                    d0 = 1
                    l += 1
                else:
                    d0 += 1
            else:
                print(str(koho[i]))
                break
    return


# Generated by 2.11.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    solve(X)


if __name__ == '__main__':
    main()
